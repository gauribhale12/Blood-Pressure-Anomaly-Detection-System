/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Encounter;
import Model.EncounterHistory;
import Model.Patient;
import Model.PatientDirectory;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gauri
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    EncounterHistory enhist;
    PatientDirectory patdiredirectory;
    String SelTxt="";
    public SearchJPanel(EncounterHistory enhist, PatientDirectory patdiredirectory) {
        initComponents();
        this.enhist=enhist;
        this.patdiredirectory=patdiredirectory;
        displayEnhist();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lbtitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        EnTb = new javax.swing.JTable();
        comboboxsearch = new javax.swing.JComboBox<>();
        txtsearch1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatTb = new javax.swing.JTable();
        txtsearch2 = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        lbtbtl = new javax.swing.JLabel();
        lbtbtl1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));

        Lbtitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Lbtitle.setForeground(new java.awt.Color(255, 0, 0));
        Lbtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lbtitle.setText("Search Patient Details");

        EnTb.setBackground(new java.awt.Color(204, 204, 255));
        EnTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "BP", "Date", "Condition"
            }
        ));
        jScrollPane1.setViewportView(EnTb);

        comboboxsearch.setBackground(new java.awt.Color(204, 204, 255));
        comboboxsearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Age Group", "Community" }));
        comboboxsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxsearchActionPerformed(evt);
            }
        });

        txtsearch1.setBackground(new java.awt.Color(204, 204, 255));

        PatTb.setBackground(new java.awt.Color(204, 204, 255));
        PatTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PersonId", "Name", "Age", "Contact", "House No.", "Address", "Community", "City", "ZipCode", "BP", "Condition"
            }
        ));
        jScrollPane2.setViewportView(PatTb);

        txtsearch2.setBackground(new java.awt.Color(204, 204, 255));

        searchbtn.setBackground(new java.awt.Color(204, 204, 255));
        searchbtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        lbtbtl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbtbtl.setText("Encounter Details Table:");

        lbtbtl1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbtbtl1.setText("Patient Details Table: (Abnormal)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtsearch1)
                            .addComponent(comboboxsearch, 0, 254, Short.MAX_VALUE)
                            .addComponent(txtsearch2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(searchbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(Lbtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbtbtl, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbtbtl1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Lbtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(comboboxsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(txtsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(txtsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(searchbtn)
                .addGap(1, 1, 1)
                .addComponent(lbtbtl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lbtbtl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(421, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Patient> patientlist = patdiredirectory.getPatientList();
        
        if(SelTxt.equals("Age Group"))
        {
           int mnag = Integer.parseInt(txtsearch1.getText());
           int mxag = Integer.parseInt(txtsearch2.getText());
           List<Patient> newpatientlist= patientlist.stream().filter(a -> a.getPersonage()>=mnag && a.getPersonage()<=mxag && a.isIsnorm() == false).collect(Collectors.toList());
           displaypat(newpatientlist);
           
        }
        else if(SelTxt.equals("Community"))
        {
            //System.out.println("Community");
            String Community = txtsearch1.getText();
            List<Patient> newpatientlist= patientlist.stream().filter(a -> a.getHouse().getComname().contains(Community)&& a.isIsnorm()== false).collect(Collectors.toList());
            displaypat(newpatientlist);
        }
        
       /* else if(SelTxt =="HouseNo")
        {
            int HNo = Integer.parseInt(txtsearch1.getText());
            List<Patient> newpatientlist = patientlist.stream().filter(a -> a.getHouse().getHouseNo() == HNo && a.isIsnorm() ==false).collect(Collectors.toList());
            displaypat(newpatientlist);
        }
        else if(SelTxt =="PatientID")
        {
            int PatID = Integer.parseInt(txtsearch1.getText());
            List<Patient> newpatientlist= patientlist.stream().filter(a ->a.getPatientId() == PatID && a.isIsnorm() == false).collect(Collectors.toList());
            displaypat(newpatientlist);
        }*/
    }//GEN-LAST:event_searchbtnActionPerformed

    private void comboboxsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxsearchActionPerformed
        // TODO add your handling code here:
        SelTxt = comboboxsearch.getSelectedItem().toString();
        if(comboboxsearch.getSelectedIndex()==1){
            txtsearch2.setVisible(false);
        }
        else if(comboboxsearch.getSelectedIndex()==0){
            txtsearch1.setVisible(true);
            txtsearch2.setVisible(true);
        }
    }//GEN-LAST:event_comboboxsearchActionPerformed
private void displaypat(List<Patient> patientlist){
    DefaultTableModel model = (DefaultTableModel) PatTb.getModel();
    model.setRowCount(0);
    for(Patient P : patientlist)
    {
        Object[] row =new Object[11];
        //row[0] = P.getPatientId();
        row[0] =P.getPersonid();
        row[1] =P.getPersonname();
        row[2] =P.getPersonage();
        row[3] =P.getContact();
        row[4] =P.getHouse().getHouseNo();
        row[5] =P.getHouse().getAddress();
        row[6] =P.getHouse().getComname();
        row[7] =P.getHouse().getCtyname();
        row[8] =P.getHouse().getZipcode();
        row[9] =P.getVSgns().getBP();
        
        row[10] =P.isIsnorm()?"Norm" : "AbNorm";
        model.addRow(row); 
    }
}
private void displayEnhist(){
    DefaultTableModel model = (DefaultTableModel) EnTb.getModel();
    model.setRowCount(0);
    for(Encounter En : enhist.getEncounterlist())
    {
        Object[] row =  new Object[4];
        //row[0] = En.getPatientId();
        row[0] = En.getVSigns().getBP();
        row[1] = En.getEnconterdate();
        //System.out.println(En.isPatNormal(En.getVSigns().getBP()));
        //System.out.println(En.getVSigns().getBP());
        if(!En.isPatNormal(En.getVSigns().getBP())){
           // System.out.println(En.getVSigns().getBP());
            //System.out.println(En.isPatNormal(En.getVSigns().getBP()));
            row[2] = "Abnormal";
        }
        else{
            row[2] = "Normal";
        }
      //row[3] = En.isIsPatientNormal()?"Norm" : "Abnorm";
        model.addRow(row);
        
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable EnTb;
    private javax.swing.JLabel Lbtitle;
    private javax.swing.JTable PatTb;
    private javax.swing.JComboBox<String> comboboxsearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbtbtl;
    private javax.swing.JLabel lbtbtl1;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField txtsearch1;
    private javax.swing.JTextField txtsearch2;
    // End of variables declaration//GEN-END:variables
}
